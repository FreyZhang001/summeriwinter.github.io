<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Frey's blog - Python</title><link href="https://summeriwinter.github.io/" rel="alternate"></link><link href="https://summeriwinter.github.io/feeds/python.atom.xml" rel="self"></link><id>https://summeriwinter.github.io/</id><updated>2018-09-09T12:00:00+08:00</updated><entry><title>python3之模块</title><link href="https://summeriwinter.github.io/python3zhi-mo-kuai.html" rel="alternate"></link><published>2018-04-28T10:01:00+08:00</published><updated>2018-09-09T12:00:00+08:00</updated><author><name>Frey</name></author><id>tag:summeriwinter.github.io,2018-04-28:/python3zhi-mo-kuai.html</id><summary type="html">&lt;p&gt;关于python模块的一些问题&lt;/p&gt;</summary><content type="html">&lt;h1&gt;1.python3模块&lt;/h1&gt;
&lt;p&gt;简单讲，一个模块就是一个*.py文件，这个文件里面可以定义类，函数，变量，也可以包含可执行代码。&lt;/p&gt;
&lt;h1&gt;2.模块的引入&lt;/h1&gt;
&lt;h2&gt;2.1import引入&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;module1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;module2&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="o"&gt;.........&lt;/span&gt;&lt;span class="n"&gt;moduleN&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一个模块只会被导入一次，不管执行了多少次import，这样可以防止导入模块被重复执行。&lt;/p&gt;
&lt;h2&gt;2.2from * import语句&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;modname&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;name1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;name2&lt;/span&gt;&lt;span class="o"&gt;..........&lt;/span&gt;&lt;span class="n"&gt;nameN&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mod&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;func_1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这个声明不会把整个mod模块导入到当前命名空间中，它只会将mod里的func_1单个引入到执行这个声明的模块的全局符号表。&lt;/p&gt;
&lt;p&gt;from … import * ：这样会把模块中的所有内容导入到当前命名空间，一般不建议使用，消耗内存空间，也容易出现未预知的问题。&lt;/p&gt;
&lt;h1&gt;3.搜索路径&lt;/h1&gt;
&lt;p&gt;搜索顺序：当前目录-&amp;gt;系统环境变量PATHONHOME-&amp;gt;标准链接库目录
通过&lt;code&gt;sys.path&lt;/code&gt;可查看搜索路径&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Python36&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;python36.zip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Python36&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;DLLs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Python36&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;lib&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Python36&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Python36&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;lib&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;site-packages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;4.命名空间&lt;/h1&gt;
&lt;p&gt;变量是拥有匹配对象的名字（标识符）。命名空间是一个包含了变量名称（键）和它们各自相应的对象们（值）的字典。
函数内用到全局变量要用global语句，否则会当作局部变量处理&lt;/p&gt;
&lt;h1&gt;其他问题:&lt;/h1&gt;
&lt;p&gt;1.python模块里的可执行代码何时执行？
当导入模块时，python顶层的代码会执行一次，若要重新执行模块的顶层代码需要通道reload()函数
另外python3中的reload()需要从imp包中导入
2.关于python模块循环引入的问题？&lt;/p&gt;
&lt;h1&gt;参考资料&lt;/h1&gt;
&lt;p&gt;1.&lt;a href="https://www.cnblogs.com/zhangxinqi/p/7905103.html"&gt;https://www.cnblogs.com/zhangxinqi/p/7905103.html&lt;/a&gt;&lt;/p&gt;</content><category term="python"></category></entry><entry><title>python遇到的错误</title><link href="https://summeriwinter.github.io/pythonyu-dao-de-cuo-wu.html" rel="alternate"></link><published>2017-12-26T10:01:00+08:00</published><updated>2018-09-09T12:00:00+08:00</updated><author><name>Frey</name></author><id>tag:summeriwinter.github.io,2017-12-26:/pythonyu-dao-de-cuo-wu.html</id><summary type="html">&lt;p&gt;python使用在中遇到的错误&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;font color="red"&gt;python ImportError: DLL load failed: %1 不是有效的 Win32 应用程序&lt;/font&gt; 
解决方法：去下载与你所安装的Python版本对应的pywin32并安装&lt;br&gt;
下载链接：https://sourceforge.net/projects/pywin32/files/pywin32/&lt;br&gt;
对应版本和位数&lt;br&gt;
Python 2.7.13 (v2.7.13:a06454b1afa1, Dec 17 2016, 20:42:59) [MSC v.1500 32 bit (Intel)] on win32&lt;br&gt;
Type “help”, “copyright”, “credits” or “license” for more information.&lt;br&gt;
还有一种可能是导入的模块是64位的，而你的python是32位的  &lt;/p&gt;</content><category term="python"></category></entry><entry><title>Matlab函数freqs和freqz</title><link href="https://summeriwinter.github.io/matlabhan-shu-freqshe-freqz.html" rel="alternate"></link><published>2017-08-09T10:01:00+08:00</published><updated>2018-09-09T12:00:00+08:00</updated><author><name>Frey</name></author><id>tag:summeriwinter.github.io,2017-08-09:/matlabhan-shu-freqshe-freqz.html</id><summary type="html">&lt;p&gt;matlab中的freqs和freqz函数&lt;/p&gt;</summary><content type="html">&lt;h1&gt;1.freqs&lt;/h1&gt;
&lt;p&gt;模拟滤波器的频率响应&lt;br&gt;
语法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;freqs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;freqs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;freqs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;freqs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;1.1描述：&lt;/h2&gt;
&lt;p&gt;freqs 返回一个模拟滤波器的H(jw)的复频域响应(拉普拉斯格式)
$$
H\left(s\right)
=\frac{B\left(s\right)}{A\left(s\right)}
=\frac
{b\left(1\right)s^n+b\left(2\right)s^{n-1}+\dots+b\left(n+1\right)}
{a\left(1\right)s^m+a\left(2\right)s^{m-1}+\dots+a\left(m+1\right)}
$$
h = freqs(b, a, w) 根据系数向量计算返回模拟滤波器的复频域响应&lt;br&gt;
freqs 计算在复平面虚轴上的频率响应h，角频率w确定了输入的实向量，因此必须包含至少一个频率点。&lt;br&gt;
[h, w] = freqs(b, a) 自动挑选200个频率点来计算频率响应h&lt;br&gt;
[h, w] = freqs(b, a, f) 挑选f个频率点来计算频率响应h  &lt;/p&gt;
&lt;h2&gt;1.2例子：&lt;/h2&gt;
&lt;p&gt;找到并画出下面传递函数的频率响应
$$
H\left(s\right)
=\frac{0.2s^2+0.3s+1}{s^2+0.4s+1}
$$
Matlab代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;logspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;freqs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;logspace 功能：生成从10的a次方到10的b次方之间按对数等分的n个元素的行向量&lt;br&gt;
n如果省略，则默认值为50。  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;freqs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;mag&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="n"&gt;phase&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;loglog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;mag&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;semilogx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;phase&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="n"&gt;mag&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;log10&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mag&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="n"&gt;phase&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;phase&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="http://upload-images.jianshu.io/upload_images/2950376-b264b55b452e2e05.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"&gt;  &lt;/p&gt;
&lt;h1&gt;2.freqz&lt;/h1&gt;
&lt;p&gt;MATLAB提供了专门用于求离散系统频响特性的函数freqz()&lt;br&gt;
调用freqz()的格式有以下两种：  &lt;/p&gt;
&lt;h2&gt;2.1[H,w]=freqz(B,A,N)&lt;/h2&gt;
&lt;p&gt;$$
H\left(e^{jw}\right)
=\frac{B\left(e^{jw}\right)}{A\left(e^{jw}\right)}
=\frac
{b\left(1\right)+b\left(2\right)e^{-jw}+b\left(2\right)e^{-j2w}+\dots+b\left(M\right)e^{-j\left(M-1\right)w}}
{a\left(1\right)+a\left(2\right)e^{-jw}+a\left(2\right)e^{-j2w}+\dots+b\left(N\right)e^{-j\left(N-1\right)w}}
$$
B和A分别为离散系统的系统函数分子、分母多项式的系数向量，N为正整数，返回量H则包含了离散系统频响 在 0——pi范围内N个频率等分点的值，向量w则包含范围内N个频率等分点。调用中若N默认，默认值为512。  &lt;/p&gt;
&lt;h2&gt;2.2[H,w]=freqz(B,A,N,’whole’)&lt;/h2&gt;
&lt;p&gt;该调用格式将计算离散系统在0—pi范内的N个频率等分店的频率响应的值。因此，可以先调用freqz()函数计算系统的频率响应，然后利用abs()和angle()函数及plot()函数，即可绘制出系统在 或 范围内的频响曲线。&lt;br&gt;
例：绘制如下系统的频响曲线&lt;br&gt;
H(z)=(z-0.5)/z&lt;br&gt;
MATLAB命令如下：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;=[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="p"&gt;=[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;]=&lt;/span&gt;&lt;span class="n"&gt;freqz&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;whole&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;H是频率响应的幅度，w是0—pi内的400个点  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Hf&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Hx&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;clf&lt;/span&gt;
&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Hf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;离散系统幅频特性曲线&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Hx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;离散系统相频特性曲线&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;幅频特性:&lt;br&gt;
&lt;img src="http://upload-images.jianshu.io/upload_images/2950376-6cf701c431d25ecf.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"&gt;&lt;br&gt;
相频特性:&lt;br&gt;
&lt;img src="http://upload-images.jianshu.io/upload_images/2950376-2b3df07daa4591a4.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"&gt;&lt;br&gt;
这样画出来的是线性的，要想获得db格式的幅度，需要转换 20*log10（Hf）
之后再画就是db格式的&lt;br&gt;
也可以直接用freqz(b,a,w)这样就会画出幅频响应和相频响应，幅频响应直接是db格式的幅度。  &lt;/p&gt;</content><category term="python"></category></entry><entry><title>涉及PyQt5的一些命令</title><link href="https://summeriwinter.github.io/she-ji-pyqt5de-yi-xie-ming-ling.html" rel="alternate"></link><published>2017-08-09T10:01:00+08:00</published><updated>2018-09-09T12:00:00+08:00</updated><author><name>Frey</name></author><id>tag:summeriwinter.github.io,2017-08-09:/she-ji-pyqt5de-yi-xie-ming-ling.html</id><summary type="html">&lt;p&gt;记录pyqt5中用到的几个命令&lt;/p&gt;</summary><content type="html">&lt;p&gt;安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install python-qt5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;把ui转py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python -m PyQt5.uic.pyuic &amp;lt;arguments&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;lineEdit输入隐藏，密码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;lineEdit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setEchoMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QtWidgets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QLineEdit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;py转exe&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install pyinstaller
pyinstaller demo.py
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;参数&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;-F&lt;/td&gt;
&lt;td&gt;指定打包后只生成一个exe格式的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;-D&lt;/td&gt;
&lt;td&gt;–onedir创建一个目录,包含exe文件,但会依赖很多文件（默认选项）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;-c&lt;/td&gt;
&lt;td&gt;–console,–nowindowed使用控制台,无界面(默认)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;-F&lt;/td&gt;
&lt;td&gt;指定打包后只生成一个exe格式的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;-w&lt;/td&gt;
&lt;td&gt;–windowed,–noconsole使用窗口,无控制台&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;-p&lt;/td&gt;
&lt;td&gt;添加搜索路径,让其找到对应的库。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;-i&lt;/td&gt;
&lt;td&gt;改变生成程序的icon图标&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content><category term="python"></category><category term="pyqt5"></category></entry><entry><title>Python2与Python3共存</title><link href="https://summeriwinter.github.io/python2yu-python3gong-cun.html" rel="alternate"></link><published>2017-08-03T10:01:00+08:00</published><updated>2018-09-09T12:00:00+08:00</updated><author><name>Frey</name></author><id>tag:summeriwinter.github.io,2017-08-03:/python2yu-python3gong-cun.html</id><summary type="html">&lt;p&gt;在windows下安装多个版本的python&lt;/p&gt;</summary><content type="html">&lt;h1&gt;1.安装两个版本的Python&lt;/h1&gt;
&lt;p&gt;选择想要安装的版本下载例如:
python2下载地址:https://www.python.org/ftp/python/2.7.13/python-2.7.13.msi&lt;br&gt;
python3下载地址:https://www.python.org/ftp/python/3.6.2/python-3.6.2.exe&lt;/p&gt;
&lt;p&gt;进行安装(安装顺序随便)&lt;br&gt;
尽量安装到同一目录下的两个文件夹例如:&lt;br&gt;
python2安装在”D:\program\python27\”下&lt;br&gt;
python3安装在”D:\program\python36\”下  &lt;/p&gt;
&lt;h1&gt;2.添加环境变量&lt;/h1&gt;
&lt;p&gt;Path中要有一下四个路径&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;D:\program\python\Python36\Scripts\
D:\program\python\Python36\
D:\program\python\python27\Scripts
D:\program\python\python27\
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;3.更改python.exe名字&lt;/h1&gt;
&lt;p&gt;找到找到两个python的安装目录
&lt;code&gt;D:\program\python\Python36\python.exe&lt;/code&gt;
更改为
&lt;code&gt;D:\program\python\Python36\python3.exe&lt;/code&gt;
&lt;code&gt;D:\program\python\Python27\python.exe&lt;/code&gt;
更改为
&lt;code&gt;D:\program\python\Python36\python2.exe&lt;/code&gt;&lt;br&gt;
此时两个版本的python已经共同存在&lt;br&gt;
但还要对pip进行修改&lt;/p&gt;
&lt;h1&gt;4.更改pip名称&lt;/h1&gt;
&lt;p&gt;重装python2和python3的pip  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python2 -m pip install --upgrade pip --force-reinstall
python3 -m pip install --upgrade pip --force-reinstall
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重装成功后进行如下测试&lt;br&gt;
test.PNG...&lt;br&gt;
可见python2和python3已经共存&lt;br&gt;
pip的问题也解决了&lt;br&gt;
但直接调用pip是还能执行并且是后安装的pip的版本&lt;br&gt;
python命令已经不存在&lt;br&gt;
直接运行py结尾的文件时会出现问题&lt;br&gt;
python自带的编辑器出现了两个  &lt;/p&gt;</content><category term="python"></category></entry></feed>